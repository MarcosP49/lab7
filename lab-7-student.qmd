For this lab, you will be joining and filtering related data sets to solve a murder mystery!

# Part 1: GitHub Workflow

At the top of the document (in the YAML) there is an `author` line that says 
`"Your name here!"`. Change this to be your name and save your file either by
clicking on the blue floppy disk or with a shortcut (command / control + s). 

Be sure to [commit the files to your repo](https://happygitwithr.com/existing-github-first#stage-and-commit). 

Let's get started!


# Part 2: Some Words of Advice

-   Set chunk options carefully.

-   Make sure you don't print out more output than you need.

-   Make sure you don't assign more objects than necessary---avoid "object junk"
in your environment.

-   Make your code readable and nicely formatted.

-   Think through your desired result **before** writing any code.

# Part 3: Finding the Killer

Northwestern University's Knight Lab wanted to help sharpen users' database
skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different
pieces of information pertinent to the crime - people, social media check-ins,
driver's licenses, crime scene reports, police interviews, and more!


## Access the Data

This code chunk will read in **all** of the tables of data for you. Don't modify or
remove this! Take some time to look at each file type so that 

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/jcanner/stat_210_2025_website/main/labs/instructions/lab-7-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!


**Step 1: Find the police report in `crime_scene_report`. Then used the information in the report to move on to the next data source based on the information learned.**

```{r}
# Code for looking at the relevant crime scene report.
crime_scene_report_SQL = crime_scene_report %>%
  filter(city == "SQL City") %>%
  filter(type == "murder") %>%
  filter(date == "20180115")
print(crime_scene_report_SQL$description)
```




**Next Steps: Follow the evidence to the person responsible for the murder, building a report as you go.**
There are accomplices, some knowingly and some unknowingly, but there is only one mastermind.


Solve the murder mystery, showing **all of your work in this document**. Your
document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the
tables manually. Functions from `stringr` and `lubridate` will also be useful.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

```{r}
library(stringr)
#First, find the wanted people in the person dataset
witness1 = person %>%
  filter(address_street_name == "Franklin Ave") %>%
  filter((str_detect(name, "Annabel")))
witness2 = person %>%
  filter(address_street_name == "Northwestern Dr") %>%
   filter(address_number == max(address_number, na.rm = TRUE))
print(witness1)
print(witness2)
```

```{r}
#Join person id to interview
person_interviews = left_join(person, interview, by = c("id" = "person_id"))
interview1 = print((filter(person_interviews, id == 16371))$transcript)
interview2 = print((filter(person_interviews, id == 14887))$transcript)
```
```{r}
#Get the check in and license plate data
suspect = get_fit_now_member %>%
  filter(membership_status == "gold") %>%
  filter((str_detect(id, "48Z")))
suspect2 = drivers_license %>%
  filter((str_detect(plate_number, "H42W")))
print(suspect)
print(suspect2)

suspect3 = get_fit_now_check_in %>%
  filter(check_in_date == "20180109") %>%
  filter((str_detect(membership_id, "48Z")))
print(suspect3)
#Possible suspects: Joe Germuska, Jeremy Bowers
```

```{r}
suspect_interviews = person_interviews %>%
  filter(name == "Joe Germuska" | name == "Jeremy Bowers")
print(suspect_interviews$transcript)
# Red Tesla Model S, 65 or 67", SQL Symphony 3 Times Dec 2017
```

```{r}
suspect_license = drivers_license %>%
  filter(hair_color == "red") %>%
  filter(height == 65 | height == 67) %>%
  filter(car_make == "Tesla")
print(suspect_license)

suspect4 = (filter(person, license_id == suspect_license$id))
print(suspect4)

```

```{r}
SQL_attendees = facebook_event_checkin %>%
  filter((str_detect(event_name, "SQL"))) %>%
  filter(date > 20171200) %>%
  filter(date < 20180000) %>%
  group_by(person_id) %>%
  summarize(attendance_count = n())
print(SQL_attendees)
# Possible id's: 24556, 99716
```

```{r}
suspects = filter(person, id == "24556" | id == "99716")
print(suspects$name)

```
```{r}
suspect_interviews = person_interviews %>%
  filter(name == "Bryan Pardo" | name == "Miranda Priestly")
print(suspect_interviews$transcript)
```
```{r}
red_checkin = filter(facebook_event_checkin, person_id == 78881)
print(red_checkin)
red_income = filter(income, ssn == suspect4$ssn)
print(red_income)
```



::: callout-note
## And the final suspect is...

*Red Korb*
:::
